const fs = require("fs");
const path = require("path");
const [, , inputName] = process.argv;
const format = require("date-fns/format");

const now = Date.now();
const current = format(now, "yyyyMMddHHmm");
// let name = inputName ? `${current}-${inputName}` : current;
let name = inputName ? inputName : current;

const mdxPath = path.join(path.join(__dirname, "../docs", name + ".mdx"));

const title = inputName ? inputName : name;
fs.writeFileSync(mdxPath, `---\ntitle: ${title}\ncreated: ${now}\n---\n`);
const { getPaths, loadConfig, createIndex } = require("./api");

const pagePath = path.join(path.join(__dirname, "../pages", `${name}.tsx`));

fs.writeFileSync(
  pagePath,
  `// generated by scripts/new-page.js
// @ts-ignore
import Doc, { frontmatter } from "../docs/${name}.mdx";
import { Layout } from "../components/layout";
import ssgConfig from "../mdxx-ssg.json";

const newProps = {...ssgConfig, ...frontmatter} as any;

export const config = {
  amp: true,
};

export default () => (
  <Layout {...newProps}>
    <Doc />
  </Layout>
);
`
);

console.log("gen >", mdxPath.replace(process.cwd(), ""));
console.log("gen >", pagePath.replace(process.cwd(), ""));

// re-create-index
const config = loadConfig();
const paths = getPaths();

// console.log("create index", paths);

createIndex(paths, config);
